apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply from: rootProject.file('gradle/checkstyle.gradle')

def STRING = "String"

android {
  compileSdkVersion parent.ext.androidCompileSdkVersion
  buildToolsVersion parent.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion parent.ext.androidMinSdkVersion
    targetSdkVersion parent.ext.androidTargetSdkVersion
    versionCode parent.ext.androidVersionCode
    versionName parent.ext.androidVersionName

    buildConfigField STRING, "API_URL", '"http://dashboard.sandbox.applivery.com"'
  }

  buildTypes {
    debug {
      buildConfigField STRING, "API_URL", '"http://dashboard.sandbox.applivery.com"'
      testCoverageEnabled true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//      buildConfigField STRING, "API_URL", '"https://dashboard.applivery.com"'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  sourceSets {
    test {
      resources {
        srcDir "test"
      }
    }
  }

  lintOptions {
    abortOnError false
  }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  compile 'com.android.support:appcompat-v7:23.0.1'
  compile 'com.squareup.retrofit:converter-gson:2.0.0-beta1'
  compile 'com.squareup.okhttp:logging-interceptor:2.6.0'
  compile 'com.squareup.retrofit:retrofit:2.0.0-beta1'
  compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta1'
  compile 'com.squareup.okhttp:okhttp:2.5.0'
  compile 'com.google.code.gson:gson:2.3.1'
  compile 'com.karumi:dexter:2.1.2'

  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-all:2.0.2-beta'
  testCompile 'com.squareup.okhttp:mockwebserver:2.6.0'
  compile 'org.mockito:mockito-all:2.0.2-beta'
}



apply from: '../maven_push.gradle'
